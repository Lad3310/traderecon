{"ast":null,"code":"var _jsxFileName = \"/Users/joelaird/TradeRecon/src/components/TradeMessage/TradeMessage.jsx\";\nimport React from 'react';\nimport './TradeMessage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradeMessage = ({\n  message\n}) => {\n  // Extract message type from the header\n  const messageType = message.header.messageType.split('/')[0];\n  const renderMessageHeader = () => {\n    const {\n      password,\n      sender,\n      messageType,\n      receiver\n    } = message.header;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Password: \", password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Sender: \", sender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Message Type: \", messageType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Receiver: \", receiver]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  };\n  const renderGenl = () => {\n    const {\n      seme,\n      messageFunction,\n      prepDateTime\n    } = message.genl;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-genl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Reference: \", seme]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Function: \", messageFunction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Prep Date/Time: \", prepDateTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  };\n  const renderConfDetails = () => {\n    const {\n      tradeDate,\n      settlementDate,\n      price,\n      amount\n    } = message.confDetails || {};\n    if (!message.confDetails) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-conf-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Trade Date: \", tradeDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Settlement Date: \", settlementDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Price: \", price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Amount: \", amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStatus = () => {\n    if (!message.status) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message-status status-${getStatusClass(message.status.type)}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Status: \", message.status.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), message.status.reason && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Reason: \", message.status.reason]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  };\n  const getStatusClass = statusType => {\n    if (statusType.includes('PACK')) return 'accepted';\n    if (statusType.includes('REJT')) return 'rejected';\n    return 'pending';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trade-message\",\n    \"data-type\": `MT${messageType}`,\n    children: [renderMessageHeader(), renderGenl(), renderConfDetails(), renderStatus()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c = TradeMessage;\nexport default TradeMessage;\nvar _c;\n$RefreshReg$(_c, \"TradeMessage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TradeMessage","message","messageType","header","split","renderMessageHeader","password","sender","receiver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderGenl","seme","messageFunction","prepDateTime","genl","renderConfDetails","tradeDate","settlementDate","price","amount","confDetails","renderStatus","status","getStatusClass","type","reason","statusType","includes","_c","$RefreshReg$"],"sources":["/Users/joelaird/TradeRecon/src/components/TradeMessage/TradeMessage.jsx"],"sourcesContent":["import React from 'react';\nimport './TradeMessage.css';\n\nconst TradeMessage = ({ message }) => {\n  // Extract message type from the header\n  const messageType = message.header.messageType.split('/')[0];\n\n  const renderMessageHeader = () => {\n    const { password, sender, messageType, receiver } = message.header;\n    return (\n      <div className=\"message-header\">\n        <div>Password: {password}</div>\n        <div>Sender: {sender}</div> \n        <div>Message Type: {messageType}</div>\n        <div>Receiver: {receiver}</div>\n      </div>\n    );\n  };\n\n  const renderGenl = () => {\n    const { seme, messageFunction, prepDateTime } = message.genl;\n    return (\n      <div className=\"message-genl\">\n        <div>Reference: {seme}</div>\n        <div>Function: {messageFunction}</div>\n        <div>Prep Date/Time: {prepDateTime}</div>\n      </div>\n    );\n  };\n\n  const renderConfDetails = () => {\n    const { tradeDate, settlementDate, price, amount } = message.confDetails || {};\n    if (!message.confDetails) return null;\n    \n    return (\n      <div className=\"message-conf-details\">\n        <div>Trade Date: {tradeDate}</div>\n        <div>Settlement Date: {settlementDate}</div>\n        <div>Price: {price}</div>\n        <div>Amount: {amount}</div>\n      </div>\n    );\n  };\n\n  const renderStatus = () => {\n    if (!message.status) return null;\n    \n    return (\n      <div className={`message-status status-${getStatusClass(message.status.type)}`}>\n        <div>Status: {message.status.type}</div>\n        {message.status.reason && <div>Reason: {message.status.reason}</div>}\n      </div>\n    );\n  };\n\n  const getStatusClass = (statusType) => {\n    if (statusType.includes('PACK')) return 'accepted';\n    if (statusType.includes('REJT')) return 'rejected';\n    return 'pending';\n  };\n\n  return (\n    <div className=\"trade-message\" data-type={`MT${messageType}`}>\n      {renderMessageHeader()}\n      {renderGenl()} \n      {renderConfDetails()}\n      {renderStatus()}\n    </div>\n  );\n};\n\nexport default TradeMessage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}