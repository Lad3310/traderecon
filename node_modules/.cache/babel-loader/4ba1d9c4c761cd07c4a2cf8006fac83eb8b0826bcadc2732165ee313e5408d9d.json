{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { supabase } from '../services/supabase';\nexport const useContacts = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchContacts = async () => {\n    try {\n      setLoading(true);\n      const {\n        data,\n        error: supabaseError\n      } = await supabase.from('contacts').select('*').order('counterparty_name');\n      if (supabaseError) throw supabaseError;\n      setContacts(data || []);\n    } catch (err) {\n      console.error('Error fetching contacts:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addContact = async newContact => {\n    try {\n      const {\n        data,\n        error: supabaseError\n      } = await supabase.from('contacts').insert([newContact]).select();\n      if (supabaseError) throw supabaseError;\n      setContacts(prev => [...prev, data[0]]);\n      return {\n        success: true\n      };\n    } catch (err) {\n      console.error('Error adding contact:', err);\n      return {\n        success: false,\n        error: err.message\n      };\n    }\n  };\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n  return {\n    contacts,\n    loading,\n    error,\n    addContact,\n    refreshContacts: fetchContacts\n  };\n};\n_s(useContacts, \"7pjivTfx4GY3jCOsbtmEhlleMPE=\");","map":{"version":3,"names":["useState","useEffect","supabase","useContacts","_s","contacts","setContacts","loading","setLoading","error","setError","fetchContacts","data","supabaseError","from","select","order","err","console","message","addContact","newContact","insert","prev","success","refreshContacts"],"sources":["/Users/joelaird/TradeRecon/src/hooks/useContacts.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { supabase } from '../services/supabase';\n\nexport const useContacts = () => {\n  const [contacts, setContacts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchContacts = async () => {\n    try {\n      setLoading(true);\n      const { data, error: supabaseError } = await supabase\n        .from('contacts')\n        .select('*')\n        .order('counterparty_name');\n\n      if (supabaseError) throw supabaseError;\n      setContacts(data || []);\n    } catch (err) {\n      console.error('Error fetching contacts:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addContact = async (newContact) => {\n    try {\n      const { data, error: supabaseError } = await supabase\n        .from('contacts')\n        .insert([newContact])\n        .select();\n\n      if (supabaseError) throw supabaseError;\n      \n      setContacts(prev => [...prev, data[0]]);\n      return { success: true };\n    } catch (err) {\n      console.error('Error adding contact:', err);\n      return { success: false, error: err.message };\n    }\n  };\n\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  return {\n    contacts,\n    loading,\n    error,\n    addContact,\n    refreshContacts: fetchContacts\n  };\n}; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,sBAAsB;AAE/C,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAM;QAAEI,IAAI;QAAEH,KAAK,EAAEI;MAAc,CAAC,GAAG,MAAMX,QAAQ,CAClDY,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,mBAAmB,CAAC;MAE7B,IAAIH,aAAa,EAAE,MAAMA,aAAa;MACtCP,WAAW,CAACM,IAAI,IAAI,EAAE,CAAC;IACzB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,OAAO,CAACT,KAAK,CAAC,0BAA0B,EAAEQ,GAAG,CAAC;MAC9CP,QAAQ,CAACO,GAAG,CAACE,OAAO,CAAC;IACvB,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMY,UAAU,GAAG,MAAOC,UAAU,IAAK;IACvC,IAAI;MACF,MAAM;QAAET,IAAI;QAAEH,KAAK,EAAEI;MAAc,CAAC,GAAG,MAAMX,QAAQ,CAClDY,IAAI,CAAC,UAAU,CAAC,CAChBQ,MAAM,CAAC,CAACD,UAAU,CAAC,CAAC,CACpBN,MAAM,CAAC,CAAC;MAEX,IAAIF,aAAa,EAAE,MAAMA,aAAa;MAEtCP,WAAW,CAACiB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEX,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MACvC,OAAO;QAAEY,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOP,GAAG,EAAE;MACZC,OAAO,CAACT,KAAK,CAAC,uBAAuB,EAAEQ,GAAG,CAAC;MAC3C,OAAO;QAAEO,OAAO,EAAE,KAAK;QAAEf,KAAK,EAAEQ,GAAG,CAACE;MAAQ,CAAC;IAC/C;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdU,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLN,QAAQ;IACRE,OAAO;IACPE,KAAK;IACLW,UAAU;IACVK,eAAe,EAAEd;EACnB,CAAC;AACH,CAAC;AAACP,EAAA,CAnDWD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}