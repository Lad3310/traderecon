{"ast":null,"code":"var _jsxFileName = \"/Users/joelaird/TradeRecon/src/components/TradeTable/TradeTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { formatMT515Message, formatMT509Message } from '../../services/ficcService';\nimport TradeMessage from '../TradeMessage/TradeMessage';\nimport './TradeTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradeTable = () => {\n  _s();\n  const [trades, setTrades] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const handleNewTrade = trade => {\n    // Format as MT515\n    const mt515 = formatMT515Message(trade);\n\n    // Add to messages\n    setMessages(prev => [...prev, mt515]);\n\n    // Simulate receiving MT509 status\n    const mt509 = formatMT509Message({\n      receiverId: trade.senderId,\n      type: 'IPRC//PACK',\n      reason: null\n    });\n    setMessages(prev => [...prev, mt509]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trade-table\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(TradeMessage, {\n        message: msg\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TradeTable, \"W9twEYhAl++qAsuDh8tD+5WHBp4=\");\n_c = TradeTable;\nexport default TradeTable;\nvar _c;\n$RefreshReg$(_c, \"TradeTable\");","map":{"version":3,"names":["React","useState","useEffect","formatMT515Message","formatMT509Message","TradeMessage","jsxDEV","_jsxDEV","TradeTable","_s","trades","setTrades","messages","setMessages","handleNewTrade","trade","mt515","prev","mt509","receiverId","senderId","type","reason","className","children","map","msg","i","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joelaird/TradeRecon/src/components/TradeTable/TradeTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { formatMT515Message, formatMT509Message } from '../../services/ficcService';\nimport TradeMessage from '../TradeMessage/TradeMessage';\nimport './TradeTable.css';\n\nconst TradeTable = () => {\n  const [trades, setTrades] = useState([]);\n  const [messages, setMessages] = useState([]);\n\n  const handleNewTrade = (trade) => {\n    // Format as MT515\n    const mt515 = formatMT515Message(trade);\n    \n    // Add to messages\n    setMessages(prev => [...prev, mt515]);\n\n    // Simulate receiving MT509 status\n    const mt509 = formatMT509Message({\n      receiverId: trade.senderId,\n      type: 'IPRC//PACK',\n      reason: null\n    });\n    \n    setMessages(prev => [...prev, mt509]);\n  };\n\n  return (\n    <div className=\"trade-table\">\n      <div className=\"messages\">\n        {messages.map((msg, i) => (\n          <TradeMessage key={i} message={msg} />\n        ))}\n      </div>\n      \n      {/* Trade entry form would go here */}\n    </div>\n  );\n};\n\nexport default TradeTable; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,kBAAkB,EAAEC,kBAAkB,QAAQ,4BAA4B;AACnF,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,cAAc,GAAIC,KAAK,IAAK;IAChC;IACA,MAAMC,KAAK,GAAGb,kBAAkB,CAACY,KAAK,CAAC;;IAEvC;IACAF,WAAW,CAACI,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,KAAK,CAAC,CAAC;;IAErC;IACA,MAAME,KAAK,GAAGd,kBAAkB,CAAC;MAC/Be,UAAU,EAAEJ,KAAK,CAACK,QAAQ;MAC1BC,IAAI,EAAE,YAAY;MAClBC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFT,WAAW,CAACI,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEC,KAAK,CAAC,CAAC;EACvC,CAAC;EAED,oBACEX,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1BjB,OAAA;MAAKgB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBZ,QAAQ,CAACa,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACnBpB,OAAA,CAACF,YAAY;QAASuB,OAAO,EAAEF;MAAI,GAAhBC,CAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAhCID,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}