{"ast":null,"code":"export const compareTrades=(internalTrade,externalTrade)=>{if(!internalTrade||!externalTrade)return null;const discrepancies={price:Math.abs(internalTrade.price-externalTrade.price)>0.01,// Allow for small decimal differences\nquantity:internalTrade.quantity!==externalTrade.quantity,settlementdate:new Date(internalTrade.settlementdate).getTime()!==new Date(externalTrade.settlementdate).getTime(),hasDiscrepancy:false,details:[]};// Build detailed discrepancy messages\nif(discrepancies.price){discrepancies.details.push(\"Price: \".concat(internalTrade.price,\" vs \").concat(externalTrade.price));}if(discrepancies.quantity){discrepancies.details.push(\"Quantity: \".concat(internalTrade.quantity,\" vs \").concat(externalTrade.quantity));}if(discrepancies.settlementdate){discrepancies.details.push(\"Settlement: \".concat(new Date(internalTrade.settlementdate).toLocaleDateString(),\" vs \").concat(new Date(externalTrade.settlementdate).toLocaleDateString()));}discrepancies.hasDiscrepancy=discrepancies.details.length>0;return discrepancies;};export const findMatchingTrade=(internalTrade,externalTrades)=>{console.log('Finding match for:',{symbol:internalTrade.securitysymbol,date:internalTrade.tradedate,counterparty:internalTrade.counterparty});const match=externalTrades.find(extTrade=>extTrade.securitysymbol===internalTrade.securitysymbol&&extTrade.tradedate===internalTrade.tradedate&&extTrade.counterparty===internalTrade.counterparty);console.log('Match found:',match);return match;};","map":{"version":3,"names":["compareTrades","internalTrade","externalTrade","discrepancies","price","Math","abs","quantity","settlementdate","Date","getTime","hasDiscrepancy","details","push","concat","toLocaleDateString","length","findMatchingTrade","externalTrades","console","log","symbol","securitysymbol","date","tradedate","counterparty","match","find","extTrade"],"sources":["/Users/joelaird/TradeRecon/src/services/tradeComparison.js"],"sourcesContent":["export const compareTrades = (internalTrade, externalTrade) => {\n  if (!internalTrade || !externalTrade) return null;\n\n  const discrepancies = {\n    price: Math.abs(internalTrade.price - externalTrade.price) > 0.01, // Allow for small decimal differences\n    quantity: internalTrade.quantity !== externalTrade.quantity,\n    settlementdate: new Date(internalTrade.settlementdate).getTime() !== new Date(externalTrade.settlementdate).getTime(),\n    hasDiscrepancy: false,\n    details: []\n  };\n\n  // Build detailed discrepancy messages\n  if (discrepancies.price) {\n    discrepancies.details.push(`Price: ${internalTrade.price} vs ${externalTrade.price}`);\n  }\n  if (discrepancies.quantity) {\n    discrepancies.details.push(`Quantity: ${internalTrade.quantity} vs ${externalTrade.quantity}`);\n  }\n  if (discrepancies.settlementdate) {\n    discrepancies.details.push(\n      `Settlement: ${new Date(internalTrade.settlementdate).toLocaleDateString()} vs ${new Date(externalTrade.settlementdate).toLocaleDateString()}`\n    );\n  }\n\n  discrepancies.hasDiscrepancy = discrepancies.details.length > 0;\n  return discrepancies;\n};\n\nexport const findMatchingTrade = (internalTrade, externalTrades) => {\n  console.log('Finding match for:', {\n    symbol: internalTrade.securitysymbol,\n    date: internalTrade.tradedate,\n    counterparty: internalTrade.counterparty\n  })\n  \n  const match = externalTrades.find(extTrade => \n    extTrade.securitysymbol === internalTrade.securitysymbol && \n    extTrade.tradedate === internalTrade.tradedate &&\n    extTrade.counterparty === internalTrade.counterparty\n  )\n  \n  console.log('Match found:', match)\n  return match\n} "],"mappings":"AAAA,MAAO,MAAM,CAAAA,aAAa,CAAGA,CAACC,aAAa,CAAEC,aAAa,GAAK,CAC7D,GAAI,CAACD,aAAa,EAAI,CAACC,aAAa,CAAE,MAAO,KAAI,CAEjD,KAAM,CAAAC,aAAa,CAAG,CACpBC,KAAK,CAAEC,IAAI,CAACC,GAAG,CAACL,aAAa,CAACG,KAAK,CAAGF,aAAa,CAACE,KAAK,CAAC,CAAG,IAAI,CAAE;AACnEG,QAAQ,CAAEN,aAAa,CAACM,QAAQ,GAAKL,aAAa,CAACK,QAAQ,CAC3DC,cAAc,CAAE,GAAI,CAAAC,IAAI,CAACR,aAAa,CAACO,cAAc,CAAC,CAACE,OAAO,CAAC,CAAC,GAAK,GAAI,CAAAD,IAAI,CAACP,aAAa,CAACM,cAAc,CAAC,CAACE,OAAO,CAAC,CAAC,CACrHC,cAAc,CAAE,KAAK,CACrBC,OAAO,CAAE,EACX,CAAC,CAED;AACA,GAAIT,aAAa,CAACC,KAAK,CAAE,CACvBD,aAAa,CAACS,OAAO,CAACC,IAAI,WAAAC,MAAA,CAAWb,aAAa,CAACG,KAAK,SAAAU,MAAA,CAAOZ,aAAa,CAACE,KAAK,CAAE,CAAC,CACvF,CACA,GAAID,aAAa,CAACI,QAAQ,CAAE,CAC1BJ,aAAa,CAACS,OAAO,CAACC,IAAI,cAAAC,MAAA,CAAcb,aAAa,CAACM,QAAQ,SAAAO,MAAA,CAAOZ,aAAa,CAACK,QAAQ,CAAE,CAAC,CAChG,CACA,GAAIJ,aAAa,CAACK,cAAc,CAAE,CAChCL,aAAa,CAACS,OAAO,CAACC,IAAI,gBAAAC,MAAA,CACT,GAAI,CAAAL,IAAI,CAACR,aAAa,CAACO,cAAc,CAAC,CAACO,kBAAkB,CAAC,CAAC,SAAAD,MAAA,CAAO,GAAI,CAAAL,IAAI,CAACP,aAAa,CAACM,cAAc,CAAC,CAACO,kBAAkB,CAAC,CAAC,CAC9I,CAAC,CACH,CAEAZ,aAAa,CAACQ,cAAc,CAAGR,aAAa,CAACS,OAAO,CAACI,MAAM,CAAG,CAAC,CAC/D,MAAO,CAAAb,aAAa,CACtB,CAAC,CAED,MAAO,MAAM,CAAAc,iBAAiB,CAAGA,CAAChB,aAAa,CAAEiB,cAAc,GAAK,CAClEC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAE,CAChCC,MAAM,CAAEpB,aAAa,CAACqB,cAAc,CACpCC,IAAI,CAAEtB,aAAa,CAACuB,SAAS,CAC7BC,YAAY,CAAExB,aAAa,CAACwB,YAC9B,CAAC,CAAC,CAEF,KAAM,CAAAC,KAAK,CAAGR,cAAc,CAACS,IAAI,CAACC,QAAQ,EACxCA,QAAQ,CAACN,cAAc,GAAKrB,aAAa,CAACqB,cAAc,EACxDM,QAAQ,CAACJ,SAAS,GAAKvB,aAAa,CAACuB,SAAS,EAC9CI,QAAQ,CAACH,YAAY,GAAKxB,aAAa,CAACwB,YAC1C,CAAC,CAEDN,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEM,KAAK,CAAC,CAClC,MAAO,CAAAA,KAAK,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}