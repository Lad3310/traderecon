{"ast":null,"code":"var _jsxFileName = \"/Users/joelaird/TradeRecon/src/components/TradeMessage/TradeMessage.jsx\";\nimport React from 'react';\nimport './TradeMessage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradeMessage = ({\n  message\n}) => {\n  const renderMessageHeader = () => {\n    const {\n      password,\n      sender,\n      messageType,\n      receiver\n    } = message.header;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Password: \", password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Sender: \", sender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Message Type: \", messageType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Receiver: \", receiver]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  };\n  const renderGenl = () => {\n    const {\n      seme,\n      messageFunction,\n      prepDateTime\n    } = message.genl;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-genl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Reference: \", seme]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Function: \", messageFunction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Prep Date/Time: \", prepDateTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  };\n  const renderConfDetails = () => {\n    const {\n      tradeDate,\n      settlementDate,\n      price,\n      amount\n    } = message.confDetails;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-conf-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Trade Date: \", tradeDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Settlement Date: \", settlementDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Price: \", price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Amount: \", amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trade-message\",\n    children: [renderMessageHeader(), renderGenl(), renderConfDetails()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = TradeMessage;\nexport default TradeMessage;\nvar _c;\n$RefreshReg$(_c, \"TradeMessage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TradeMessage","message","renderMessageHeader","password","sender","messageType","receiver","header","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderGenl","seme","messageFunction","prepDateTime","genl","renderConfDetails","tradeDate","settlementDate","price","amount","confDetails","_c","$RefreshReg$"],"sources":["/Users/joelaird/TradeRecon/src/components/TradeMessage/TradeMessage.jsx"],"sourcesContent":["import React from 'react';\nimport './TradeMessage.css';\n\nconst TradeMessage = ({ message }) => {\n  const renderMessageHeader = () => {\n    const { password, sender, messageType, receiver } = message.header;\n    return (\n      <div className=\"message-header\">\n        <div>Password: {password}</div>\n        <div>Sender: {sender}</div> \n        <div>Message Type: {messageType}</div>\n        <div>Receiver: {receiver}</div>\n      </div>\n    );\n  };\n\n  const renderGenl = () => {\n    const { seme, messageFunction, prepDateTime } = message.genl;\n    return (\n      <div className=\"message-genl\">\n        <div>Reference: {seme}</div>\n        <div>Function: {messageFunction}</div>\n        <div>Prep Date/Time: {prepDateTime}</div>\n      </div>\n    );\n  };\n\n  const renderConfDetails = () => {\n    const { tradeDate, settlementDate, price, amount } = message.confDetails;\n    return (\n      <div className=\"message-conf-details\">\n        <div>Trade Date: {tradeDate}</div>\n        <div>Settlement Date: {settlementDate}</div>\n        <div>Price: {price}</div>\n        <div>Amount: {amount}</div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"trade-message\">\n      {renderMessageHeader()}\n      {renderGenl()} \n      {renderConfDetails()}\n    </div>\n  );\n};\n\nexport default TradeMessage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}